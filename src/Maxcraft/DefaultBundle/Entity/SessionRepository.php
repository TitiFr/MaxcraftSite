<?php

namespace Maxcraft\DefaultBundle\Entity;
use DateInterval;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\EntityRepository;

/**
 * SessionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SessionRepository extends EntityRepository {

    public function getLastCo(User $user){

         $session = $this->getEntityManager()->getRepository('MaxcraftDefaultBundle:Session')->findBy(
            array('user' => $user),
            array('end' => 'desc'),
            1,
            0
        );

        return $session[0];
    }

    public function getSleepingUsers(){
        $sleepingUs = new ArrayCollection();
        $users = $this->getEntityManager()->getRepository('MaxcraftDefaultBundle:User')->findAll();

        foreach ($users as $u){
            $end = $this->getLastCo($u)->getEnd();
            $now = new \DateTime;

            if (($end->add(DateInterval::createFromDateString('50 days')) <= $now)){
            $sleepingUs->add($u);
            }

        }

        return $sleepingUs;
    }

    public function getOnlineUsers(){

        return $this->getEntityManager()->getRepository('MaxcraftDefaultBundle:Session')->findBy(
            array('end' =>  null)
        );
    }
}
